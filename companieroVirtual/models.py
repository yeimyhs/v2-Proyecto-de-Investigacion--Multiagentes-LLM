from django.db import models
from sesion.models import Session

# Create your models here.
class Message(models.Model):
    idmessage = models.AutoField(primary_key=True)
    sender = models.CharField(max_length=225)
    date_hour = models.DateTimeField(auto_now=True)
    content = models.TextField()
    new_knowledge = models.BooleanField()
    conversation = models.ForeignKey('Conversation', on_delete=models.CASCADE, null=True, blank=True)

    def __str__(self):
        return f"Message {self.idmessage} by {self.sender}"


class Conversation(models.Model):
    idconversation = models.AutoField(primary_key=True)
    title = models.CharField(max_length=225)
    session = models.ForeignKey(Session, on_delete=models.CASCADE, null=True, blank=True)

    def __str__(self):
        return self.title


class KnowledgeTopicLearned(models.Model):
    idknowledgelearned = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255)
    description_default = models.TextField(blank=True, null=True)

    def __str__(self):
        return self.name


class SubKnowledge(models.Model):
    idsubknowledge = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255)
    description_default = models.TextField(blank=True, null=True)
    knowledge_learned = models.ForeignKey(KnowledgeTopicLearned, on_delete=models.CASCADE)

    def __str__(self):
        return self.name


class GeneratedBy(models.Model):
    subknowledge = models.ForeignKey(SubKnowledge, on_delete=models.CASCADE)
    message = models.ForeignKey(Message, on_delete=models.CASCADE)

    class Meta:
        unique_together = ("subknowledge", "message")

    def __str__(self):
        return f"{self.subknowledge} generated by {self.message}"
